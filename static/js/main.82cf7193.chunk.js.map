{"version":3,"sources":["components/drawer-menu/Styles.tsx","components/drawer-menu/MenuItems.tsx","components/drawer-menu/DrawerMenu.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["Styles","theme","Object","styles","appBar","_a","width","breakpoints","up","marginLeft","position","down","content","backgroundColor","palette","background","default","flexGrow","padding","spacing","unit","drawerPaper","_b","logo","fontSize","fontWight","textAlign","navIconHide","_c","display","root","overflow","zIndex","toolbar","mixins","MenuItems","react","ListItem_default","a","button","ListItemIcon_default","Dashboard_default","ListItemText_default","primary","TableChart_default","Send_default","DrawerMenu_DrawerMenu","_super","DrawerMenu","props","_this","call","this","state","mobileOpen","handleDrawerToggle","setState","__extends","prototype","render","classes","drawer","className","Divider_default","List_default","AppBar_default","Toolbar_default","IconButton_default","color","aria-label","onClick","Menu_default","Typography_default","variant","noWrap","Hidden_default","mdUp","Drawer_default","open","onClose","paper","ModalProps","keepMounted","smDown","implementation","drawer_menu_DrawerMenu","withTheme","src_App","App","App_extends","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","react_dom","document","getElementById","URL","toString","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.82cf7193.chunk.js","sourcesContent":["import { createStyles, Theme } from '@material-ui/core/styles';\n\nconst drawerWidth = 300;\n\nexport const styles = (theme: Theme) => createStyles({\n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      [theme.breakpoints.up('md')]: {\n        marginLeft: drawerWidth,\n        position: 'absolute'\n      },\n      [theme.breakpoints.down('sm')]: {\n        width: '100%'\n      }\n    },\n    content: {\n      backgroundColor: theme.palette.background.default,\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      [theme.breakpoints.up('md')]: {\n        position: 'relative'\n      }\n    },\n    logo: {\n      fontSize: 16,\n      fontWight: 700,\n      padding: 23,\n      textAlign: 'center'\n    },\n    navIconHide: {\n      [theme.breakpoints.up('md')]: {\n        display: 'none'\n      }\n    },\n    root: {\n      display: 'flex',\n      flexGrow: 1,\n      overflow: 'hidden',\n      position: 'relative',\n      width: '100%',\n      zIndex: 1\n    },\n    toolbar: theme.mixins.toolbar\n  });\n\n  export default styles;","import ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SendIcon from '@material-ui/icons/Send';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport * as React from 'react';\n\nexport const menuItems = (\n  <div>\n    <ListItem button={true}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary='Dashboard' />\n    </ListItem>\n    <ListItem button={true}>\n      <ListItemIcon>\n        <TableChartIcon />\n      </ListItemIcon>\n      <ListItemText primary='Tables' />\n    </ListItem>\n    <ListItem button={true}>\n      <ListItemIcon>\n        <SendIcon />\n      </ListItemIcon>\n      <ListItemText primary='Contact Us' />\n    </ListItem>\n  </div>\n);\n\nexport default menuItems;","import AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport { Theme, withStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport * as React from 'react';\nimport styles from './Styles';\nimport menuItems from './MenuItems';\n\ninterface State {\n  mobileOpen: boolean;\n}\n\ninterface Props {\n  classes: {\n    appBar: string;\n    content: string;\n    drawerPaper: string;\n    root: string;\n    logo: string;\n    navIconHide: string;\n    toolbar: string;\n  };\n}\n\nclass DrawerMenu extends React.Component<Props, State, Theme> {\npublic state = {\n    mobileOpen: false\n  };\n\n  constructor(props: Props) {\n    super(props);\n}\n\n  public handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  }\n\n  public render() {\n   const { classes } = this.props;\n\n    const drawer = (\n      <div>\n        <div className={classes.logo}>Company Logo</div>\n        <Divider />\n        <List>{menuItems}</List>\n      </div>\n    );\n\n    return (\n      <div className={classes.root}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              color='inherit'\n              aria-label='Open drawer'\n              onClick={this.handleDrawerToggle}\n              className={classes.navIconHide}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant='title' color='inherit' noWrap={true}>\n              Dashboard\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Hidden mdUp={true}>\n          <Drawer\n            variant='temporary'\n            open={this.state.mobileOpen}\n            onClose={this.handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            ModalProps={{\n              keepMounted: true // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden smDown={true} implementation='css'>\n          <Drawer\n            variant='permanent'\n            open={true}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(DrawerMenu);\n","import * as React from 'react';\nimport DrawerMenu from './components/drawer-menu/DrawerMenu';\n\nclass App extends React.Component {\n  public render() {\n    return (\n      <div>\n        <DrawerMenu />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}